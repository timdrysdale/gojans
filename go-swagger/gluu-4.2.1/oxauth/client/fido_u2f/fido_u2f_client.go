// Code generated by go-swagger; DO NOT EDIT.

package fido_u2f

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new fido u2f API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for fido u2f API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	FIDOConfiguration(params *FIDOConfigurationParams) (*FIDOConfigurationOK, error)

	GetFIDOU2FAuthentication(params *GetFIDOU2FAuthenticationParams) (*GetFIDOU2FAuthenticationOK, error)

	GetFIDOU2FRegistration(params *GetFIDOU2FRegistrationParams) (*GetFIDOU2FRegistrationOK, error)

	PostFIDOU2FAuthentication(params *PostFIDOU2FAuthenticationParams) (*PostFIDOU2FAuthenticationOK, error)

	PostFIDOU2FRegistration(params *PostFIDOU2FRegistrationParams) (*PostFIDOU2FRegistrationOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  FIDOConfiguration fidos configuration

  Performs FIDO configuration data.
*/
func (a *Client) FIDOConfiguration(params *FIDOConfigurationParams) (*FIDOConfigurationOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewFIDOConfigurationParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "fido-configuration",
		Method:             "GET",
		PathPattern:        "/fido-configuration",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &FIDOConfigurationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*FIDOConfigurationOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for fido-configuration: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetFIDOU2FAuthentication gets fido u2f authentication

  Performs FIDO U2F authentication of end-user.
*/
func (a *Client) GetFIDOU2FAuthentication(params *GetFIDOU2FAuthenticationParams) (*GetFIDOU2FAuthenticationOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetFIDOU2FAuthenticationParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "get-fido-u2f-authentication",
		Method:             "GET",
		PathPattern:        "/fido/u2f/authentication",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetFIDOU2FAuthenticationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetFIDOU2FAuthenticationOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for get-fido-u2f-authentication: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetFIDOU2FRegistration gets fido u2f registration

  U2F device registration.
*/
func (a *Client) GetFIDOU2FRegistration(params *GetFIDOU2FRegistrationParams) (*GetFIDOU2FRegistrationOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetFIDOU2FRegistrationParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "get-fido-u2f-registration",
		Method:             "GET",
		PathPattern:        "/fido/u2f/registration",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetFIDOU2FRegistrationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetFIDOU2FRegistrationOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for get-fido-u2f-registration: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostFIDOU2FAuthentication posts fido u2f authentication

  Performs FIDO U2F authentication of end-user.
*/
func (a *Client) PostFIDOU2FAuthentication(params *PostFIDOU2FAuthenticationParams) (*PostFIDOU2FAuthenticationOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostFIDOU2FAuthenticationParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "post-fido-u2f-authentication",
		Method:             "POST",
		PathPattern:        "/fido/u2f/authentication",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostFIDOU2FAuthenticationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostFIDOU2FAuthenticationOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for post-fido-u2f-authentication: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostFIDOU2FRegistration posts fido u2f registration

  U2F device registration.
*/
func (a *Client) PostFIDOU2FRegistration(params *PostFIDOU2FRegistrationParams) (*PostFIDOU2FRegistrationOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostFIDOU2FRegistrationParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "post-fido-u2f-registration",
		Method:             "POST",
		PathPattern:        "/fido/u2f/registration",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostFIDOU2FRegistrationReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostFIDOU2FRegistrationOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for post-fido-u2f-registration: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
