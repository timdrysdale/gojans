// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// JSONWebKey JsonWebKey
//
// swagger:model JsonWebKey
type JSONWebKey struct {

	// alg
	// Required: true
	Alg *string `json:"alg"`

	// crv
	Crv string `json:"crv,omitempty"`

	// e
	E string `json:"e,omitempty"`

	// exp
	// Required: true
	Exp *int64 `json:"exp"`

	// kid
	// Required: true
	Kid *string `json:"kid"`

	// kty
	// Required: true
	Kty *string `json:"kty"`

	// n
	N string `json:"n,omitempty"`

	// use
	// Required: true
	Use *string `json:"use"`

	// x
	X string `json:"x,omitempty"`

	// x5c
	// Required: true
	X5c []string `json:"x5c"`

	// y
	Y string `json:"y,omitempty"`
}

// Validate validates this Json web key
func (m *JSONWebKey) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAlg(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateExp(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateKid(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateKty(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUse(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateX5c(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *JSONWebKey) validateAlg(formats strfmt.Registry) error {

	if err := validate.Required("alg", "body", m.Alg); err != nil {
		return err
	}

	return nil
}

func (m *JSONWebKey) validateExp(formats strfmt.Registry) error {

	if err := validate.Required("exp", "body", m.Exp); err != nil {
		return err
	}

	return nil
}

func (m *JSONWebKey) validateKid(formats strfmt.Registry) error {

	if err := validate.Required("kid", "body", m.Kid); err != nil {
		return err
	}

	return nil
}

func (m *JSONWebKey) validateKty(formats strfmt.Registry) error {

	if err := validate.Required("kty", "body", m.Kty); err != nil {
		return err
	}

	return nil
}

func (m *JSONWebKey) validateUse(formats strfmt.Registry) error {

	if err := validate.Required("use", "body", m.Use); err != nil {
		return err
	}

	return nil
}

func (m *JSONWebKey) validateX5c(formats strfmt.Registry) error {

	if err := validate.Required("x5c", "body", m.X5c); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *JSONWebKey) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *JSONWebKey) UnmarshalBinary(b []byte) error {
	var res JSONWebKey
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
