// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// U2FConfiguration U2fConfiguration
//
// FIDO U2F Configuration.
//
// swagger:model U2fConfiguration
type U2FConfiguration struct {

	// authentication endpoint
	AuthenticationEndpoint string `json:"authentication_endpoint,omitempty"`

	// A URI indicating the party operating the FIDO U2F server.
	// Required: true
	Issuer *string `json:"issuer"`

	// registration endpoint
	RegistrationEndpoint string `json:"registration_endpoint,omitempty"`

	// The version of the FIDO U2F core protocol to which this server conforms. The value MUST be the string 1.0.
	// Required: true
	Version *string `json:"version"`
}

// Validate validates this U2f configuration
func (m *U2FConfiguration) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIssuer(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateVersion(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *U2FConfiguration) validateIssuer(formats strfmt.Registry) error {

	if err := validate.Required("issuer", "body", m.Issuer); err != nil {
		return err
	}

	return nil
}

func (m *U2FConfiguration) validateVersion(formats strfmt.Registry) error {

	if err := validate.Required("version", "body", m.Version); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *U2FConfiguration) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *U2FConfiguration) UnmarshalBinary(b []byte) error {
	var res U2FConfiguration
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
