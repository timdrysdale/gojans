// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetClientTokenParams GetClientTokenParams
//
// swagger:model GetClientTokenParams
type GetClientTokenParams struct {

	// token response
	// Required: true
	TokenResponse *TokenResponse1 `json:"tokenResponse"`

	// username
	// Required: true
	Username *string `json:"username"`
}

// Validate validates this get client token params
func (m *GetClientTokenParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTokenResponse(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUsername(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetClientTokenParams) validateTokenResponse(formats strfmt.Registry) error {

	if err := validate.Required("tokenResponse", "body", m.TokenResponse); err != nil {
		return err
	}

	if m.TokenResponse != nil {
		if err := m.TokenResponse.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("tokenResponse")
			}
			return err
		}
	}

	return nil
}

func (m *GetClientTokenParams) validateUsername(formats strfmt.Registry) error {

	if err := validate.Required("username", "body", m.Username); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetClientTokenParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetClientTokenParams) UnmarshalBinary(b []byte) error {
	var res GetClientTokenParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
