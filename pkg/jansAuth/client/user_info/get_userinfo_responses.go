// Code generated by go-swagger; DO NOT EDIT.

package user_info

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/timdrysdale/gojans/pkg/jansAuth/models"
)

// GetUserinfoReader is a Reader for the GetUserinfo structure.
type GetUserinfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserinfoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserinfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUserinfoBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetUserinfoUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUserinfoForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUserinfoInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUserinfoOK creates a GetUserinfoOK with default headers values
func NewGetUserinfoOK() *GetUserinfoOK {
	return &GetUserinfoOK{}
}

/*GetUserinfoOK handles this case with default header values.

OK
*/
type GetUserinfoOK struct {
	Payload interface{}
}

func (o *GetUserinfoOK) Error() string {
	return fmt.Sprintf("[GET /userinfo][%d] getUserinfoOK  %+v", 200, o.Payload)
}

func (o *GetUserinfoOK) GetPayload() interface{} {
	return o.Payload
}

func (o *GetUserinfoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserinfoBadRequest creates a GetUserinfoBadRequest with default headers values
func NewGetUserinfoBadRequest() *GetUserinfoBadRequest {
	return &GetUserinfoBadRequest{}
}

/*GetUserinfoBadRequest handles this case with default header values.

Invalid parameters provided to endpoint.
*/
type GetUserinfoBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *GetUserinfoBadRequest) Error() string {
	return fmt.Sprintf("[GET /userinfo][%d] getUserinfoBadRequest  %+v", 400, o.Payload)
}

func (o *GetUserinfoBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetUserinfoBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserinfoUnauthorized creates a GetUserinfoUnauthorized with default headers values
func NewGetUserinfoUnauthorized() *GetUserinfoUnauthorized {
	return &GetUserinfoUnauthorized{}
}

/*GetUserinfoUnauthorized handles this case with default header values.

Invalid parameters provided to endpoint.
*/
type GetUserinfoUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *GetUserinfoUnauthorized) Error() string {
	return fmt.Sprintf("[GET /userinfo][%d] getUserinfoUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUserinfoUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetUserinfoUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserinfoForbidden creates a GetUserinfoForbidden with default headers values
func NewGetUserinfoForbidden() *GetUserinfoForbidden {
	return &GetUserinfoForbidden{}
}

/*GetUserinfoForbidden handles this case with default header values.

Invalid parameters provided to endpoint.
*/
type GetUserinfoForbidden struct {
	Payload *models.ErrorResponse
}

func (o *GetUserinfoForbidden) Error() string {
	return fmt.Sprintf("[GET /userinfo][%d] getUserinfoForbidden  %+v", 403, o.Payload)
}

func (o *GetUserinfoForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetUserinfoForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserinfoInternalServerError creates a GetUserinfoInternalServerError with default headers values
func NewGetUserinfoInternalServerError() *GetUserinfoInternalServerError {
	return &GetUserinfoInternalServerError{}
}

/*GetUserinfoInternalServerError handles this case with default header values.

Internal error occured. Please check log file for details.
*/
type GetUserinfoInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *GetUserinfoInternalServerError) Error() string {
	return fmt.Sprintf("[GET /userinfo][%d] getUserinfoInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUserinfoInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetUserinfoInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
