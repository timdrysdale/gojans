// Code generated by go-swagger; DO NOT EDIT.

package authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/timdrysdale/gojans/pkg/jansAuth/models"
)

// PostAuthorizeReader is a Reader for the PostAuthorize structure.
type PostAuthorizeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAuthorizeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostAuthorizeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostAuthorizeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostAuthorizeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostAuthorizeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostAuthorizeOK creates a PostAuthorizeOK with default headers values
func NewPostAuthorizeOK() *PostAuthorizeOK {
	return &PostAuthorizeOK{}
}

/*PostAuthorizeOK handles this case with default header values.

OK
*/
type PostAuthorizeOK struct {
}

func (o *PostAuthorizeOK) Error() string {
	return fmt.Sprintf("[POST /authorize][%d] postAuthorizeOK ", 200)
}

func (o *PostAuthorizeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostAuthorizeBadRequest creates a PostAuthorizeBadRequest with default headers values
func NewPostAuthorizeBadRequest() *PostAuthorizeBadRequest {
	return &PostAuthorizeBadRequest{}
}

/*PostAuthorizeBadRequest handles this case with default header values.

Invalid parameters are provided to endpoint.
*/
type PostAuthorizeBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *PostAuthorizeBadRequest) Error() string {
	return fmt.Sprintf("[POST /authorize][%d] postAuthorizeBadRequest  %+v", 400, o.Payload)
}

func (o *PostAuthorizeBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PostAuthorizeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizeUnauthorized creates a PostAuthorizeUnauthorized with default headers values
func NewPostAuthorizeUnauthorized() *PostAuthorizeUnauthorized {
	return &PostAuthorizeUnauthorized{}
}

/*PostAuthorizeUnauthorized handles this case with default header values.

Unauthorized access request.
*/
type PostAuthorizeUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *PostAuthorizeUnauthorized) Error() string {
	return fmt.Sprintf("[POST /authorize][%d] postAuthorizeUnauthorized  %+v", 401, o.Payload)
}

func (o *PostAuthorizeUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PostAuthorizeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAuthorizeInternalServerError creates a PostAuthorizeInternalServerError with default headers values
func NewPostAuthorizeInternalServerError() *PostAuthorizeInternalServerError {
	return &PostAuthorizeInternalServerError{}
}

/*PostAuthorizeInternalServerError handles this case with default header values.

Internal error occured. Please check log file for details.
*/
type PostAuthorizeInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *PostAuthorizeInternalServerError) Error() string {
	return fmt.Sprintf("[POST /authorize][%d] postAuthorizeInternalServerError  %+v", 500, o.Payload)
}

func (o *PostAuthorizeInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PostAuthorizeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
