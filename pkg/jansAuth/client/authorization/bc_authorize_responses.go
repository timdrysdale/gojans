// Code generated by go-swagger; DO NOT EDIT.

package authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/timdrysdale/gojans/src/jansAuth/models"
)

// BcAuthorizeReader is a Reader for the BcAuthorize structure.
type BcAuthorizeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BcAuthorizeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBcAuthorizeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewBcAuthorizeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewBcAuthorizeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewBcAuthorizeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewBcAuthorizeOK creates a BcAuthorizeOK with default headers values
func NewBcAuthorizeOK() *BcAuthorizeOK {
	return &BcAuthorizeOK{}
}

/*BcAuthorizeOK handles this case with default header values.

OK
*/
type BcAuthorizeOK struct {
	Payload *models.BackchannelAuthorization
}

func (o *BcAuthorizeOK) Error() string {
	return fmt.Sprintf("[POST /bc-authorize][%d] bcAuthorizeOK  %+v", 200, o.Payload)
}

func (o *BcAuthorizeOK) GetPayload() *models.BackchannelAuthorization {
	return o.Payload
}

func (o *BcAuthorizeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BackchannelAuthorization)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBcAuthorizeBadRequest creates a BcAuthorizeBadRequest with default headers values
func NewBcAuthorizeBadRequest() *BcAuthorizeBadRequest {
	return &BcAuthorizeBadRequest{}
}

/*BcAuthorizeBadRequest handles this case with default header values.

Invalid parameters are provided to endpoint.
*/
type BcAuthorizeBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *BcAuthorizeBadRequest) Error() string {
	return fmt.Sprintf("[POST /bc-authorize][%d] bcAuthorizeBadRequest  %+v", 400, o.Payload)
}

func (o *BcAuthorizeBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *BcAuthorizeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBcAuthorizeUnauthorized creates a BcAuthorizeUnauthorized with default headers values
func NewBcAuthorizeUnauthorized() *BcAuthorizeUnauthorized {
	return &BcAuthorizeUnauthorized{}
}

/*BcAuthorizeUnauthorized handles this case with default header values.

Unauthorized CIBA (Client Initiated Backchannel Authentication) access.
*/
type BcAuthorizeUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *BcAuthorizeUnauthorized) Error() string {
	return fmt.Sprintf("[POST /bc-authorize][%d] bcAuthorizeUnauthorized  %+v", 401, o.Payload)
}

func (o *BcAuthorizeUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *BcAuthorizeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBcAuthorizeForbidden creates a BcAuthorizeForbidden with default headers values
func NewBcAuthorizeForbidden() *BcAuthorizeForbidden {
	return &BcAuthorizeForbidden{}
}

/*BcAuthorizeForbidden handles this case with default header values.

Invalid details provided hence access denied.
*/
type BcAuthorizeForbidden struct {
	Payload *models.ErrorResponse
}

func (o *BcAuthorizeForbidden) Error() string {
	return fmt.Sprintf("[POST /bc-authorize][%d] bcAuthorizeForbidden  %+v", 403, o.Payload)
}

func (o *BcAuthorizeForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *BcAuthorizeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
